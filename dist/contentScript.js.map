{"version":3,"file":"contentScript.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://react-extension/./src/components/topPage.ts","webpack://react-extension/webpack/bootstrap","webpack://react-extension/webpack/runtime/define property getters","webpack://react-extension/webpack/runtime/hasOwnProperty shorthand","webpack://react-extension/webpack/runtime/make namespace object","webpack://react-extension/./src/contentScript/contentScript.ts"],"sourcesContent":["let resultsHidden = false;\nlet blockedCount = 0;\nconst styles = `\r\n  .extension-button:hover { opacity: 0.4 !important; }\r\n  .extension-button:active { transform: scale(0.99) !important; }\r\n`;\nexport function addTopOfPage(ExtensionIsOn, BlockedCount) {\n    blockedCount = BlockedCount;\n    const appBar = document.querySelector(\"#appbar\");\n    if (!appBar) {\n        console.log(\"App Bar could not be found\");\n        return;\n    }\n    const style = document.createElement(\"style\");\n    style.id = \"top-content-styles\";\n    style.textContent = styles;\n    document.head.appendChild(style);\n    const baseButton = document.createElement(\"button\");\n    baseButton.style.width = \"auto\";\n    baseButton.style.height = \"30px\";\n    baseButton.style.marginBottom = \"0.2rem\";\n    baseButton.style.paddingLeft = \"0.7rem\";\n    baseButton.style.paddingRight = \"0.7rem\";\n    baseButton.style.borderWidth = \"0px\";\n    baseButton.style.borderRadius = \"8px\";\n    baseButton.style.transition = \"opacity 0.3s ease\";\n    baseButton.className = \"extension-button\";\n    if (ExtensionIsOn) {\n        AddTopExtensionOn(appBar, baseButton);\n    }\n    else {\n        AddTopExtensionOff(appBar, baseButton);\n    }\n}\n// Top of page when the extension is on, exists of a button to hide / show the blocked sites\n// Also contains a count of how many sites are blocked on the current page\nfunction AddTopExtensionOn(appBar, baseButton) {\n    const container = document.createElement(\"div\");\n    baseButton.addEventListener(\"click\", () => {\n        resultsHidden = !resultsHidden;\n        toggleHiddenResults();\n        updateButtonText(baseButton);\n    });\n    container.appendChild(baseButton);\n    appBar.appendChild(container);\n    getBlockedAmount();\n    updateButtonText(baseButton);\n}\nfunction updateButtonText(button) {\n    if (blockedCount < 1) {\n        button.textContent = `We blocked ${blockedCount} search results`;\n    }\n    else {\n        button.textContent = `We blocked ${blockedCount} search results. Click to ${resultsHidden ? \"hide\" : \"show\"}`;\n    }\n}\nfunction getBlockedAmount() {\n    const hiddenElements = Array.from(document.querySelectorAll('[card-show=\"false\"]'));\n    console.log(hiddenElements.values);\n}\nfunction toggleHiddenResults() {\n    const hiddenElements = document.querySelectorAll(\"[card-show]\");\n    hiddenElements.forEach((element) => {\n        if (element instanceof HTMLElement) {\n            element.setAttribute(\"card-show\", resultsHidden.toString());\n        }\n    });\n}\nexport function getResultsHidden() {\n    return resultsHidden;\n}\n// Top of page when the extension is off, exists of a text and a button to turn the extension back on/refresh the page\nfunction AddTopExtensionOff(appBar, baseButton) {\n    const container = document.createElement(\"div\");\n    baseButton.textContent =\n        \"<name> is currently turned off. Click to turn back on\";\n    baseButton.addEventListener(\"click\", () => {\n        chrome.storage.sync.set({ ExtensionOnOff: true }, () => {\n            window.location.reload();\n        });\n    });\n    container.appendChild(baseButton);\n    appBar.appendChild(container);\n}\nexport function updateBlockedCount(newCount) {\n    blockedCount = newCount;\n    const button = document.querySelector(\".extension-button\");\n    if (button) {\n        updateButtonText(button);\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addTopOfPage, getResultsHidden, updateBlockedCount, } from \"../components/topPage\";\nconst sitesToFilter = new Set([\"reddit\", \"wikipedia\"]);\nlet BlockedCount = 0;\nfunction filterGoogleSearch() {\n    if (document.documentElement.dataset.addScript) {\n        console.error(\"script already added\");\n        return;\n    }\n    document.documentElement.dataset.addScript = \"true\";\n    const processedResults = new Set();\n    new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n            if (mutation.type !== \"childList\") {\n                return;\n            }\n            mutation.addedNodes.forEach((node) => {\n                if (node.nodeType !== Node.ELEMENT_NODE) {\n                    return;\n                }\n                const searchResults = document.querySelectorAll(\"#search .g:not([data-processed])\");\n                searchResults.forEach((result) => {\n                    if (processedResults.has(result)) {\n                        return;\n                    }\n                    processedResults.add(result);\n                    result.setAttribute(\"data-processed\", \"true\");\n                    const links = result.querySelectorAll(\"a\");\n                    const cites = result.querySelectorAll(\"cite\");\n                    const shouldHide = shouldFilterResult(links, cites);\n                    if (shouldHide) {\n                        addCardShow(result);\n                    }\n                });\n                filterMoreToAskSection();\n            });\n        });\n    }).observe(document.documentElement, { childList: true, subtree: true });\n}\nfunction filterMoreToAskSection() {\n    const moreToAskSection = document.querySelector(\"[data-initq]\");\n    if (moreToAskSection) {\n        const accordionItems = moreToAskSection.querySelectorAll('[jsname=\"yEVEwb\"]');\n        accordionItems.forEach((item) => {\n            const links = item.querySelectorAll(\"a\");\n            const cites = item.querySelectorAll(\"cite\");\n            const shouldHide = shouldFilterResult(links, cites);\n            if (shouldHide) {\n                addCardShow(item);\n            }\n        });\n    }\n}\nfunction shouldFilterResult(links, cites) {\n    for (const link of links) {\n        if (shouldFilterLink(link.href)) {\n            return true;\n        }\n    }\n    for (const cite of cites) {\n        if (cite.textContent && shouldFilterLink(cite.textContent)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction shouldFilterLink(url) {\n    if (!url)\n        return false;\n    try {\n        const { hostname } = new URL(url);\n        return Array.from(sitesToFilter).some((site) => hostname.includes(site));\n    }\n    catch (error) {\n        console.log(`Invalid URL: ${url}`);\n        return false;\n    }\n}\nchrome.storage.sync.get([\"ExtensionOnOff\"], (result) => {\n    if (result.ExtensionOnOff) {\n        filterGoogleSearch();\n    }\n});\n//Since we run content script at document start (see manifest) we can only add new content on loaded dom\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    addDocumentHead();\n    chrome.storage.sync.get([\"ExtensionOnOff\"], (result) => {\n        addTopOfPage(result.ExtensionOnOff, BlockedCount);\n    });\n});\nfunction addDocumentHead() {\n    const style = document.createElement(\"style\");\n    style.id = \"Site Blocker Custom Styles\";\n    style.textContent = `\r\n    /* Display Styles */\r\n    [card-show=\"true\"] { display: block !important; }\r\n    [card-show=\"false\"] { display: none !important; }\r\n\r\n    /* Card Color Styles */\r\n    [card-relevant=\"true\"] {opacity: 0.7 !important}\r\n  `;\n    document.head.appendChild(style);\n}\nfunction addCardShow(element) {\n    if (isElementVisible(element)) {\n        BlockedCount = BlockedCount + 1;\n        updateBlockedCount(BlockedCount);\n        element.setAttribute(\"card-show\", getResultsHidden().toString());\n        element.setAttribute(\"card-relevant\", \"true\");\n    }\n}\n// Otherwise we are processing way to many elements that are not even visible on the page\nfunction isElementVisible(element) {\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        element.getClientRects().length);\n}\n"],"names":[],"sourceRoot":""}