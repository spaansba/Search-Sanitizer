{"version":3,"file":"contentScript.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://react-extension/./src/components/topPage.ts","webpack://react-extension/./src/helper/urlFilter.ts","webpack://react-extension/webpack/bootstrap","webpack://react-extension/webpack/runtime/define property getters","webpack://react-extension/webpack/runtime/hasOwnProperty shorthand","webpack://react-extension/webpack/runtime/make namespace object","webpack://react-extension/./src/contentScript/contentScript.ts"],"sourcesContent":["let resultsHidden = false;\nlet blockedCount = 0;\nconst styles = `\r\n  .extension-button:hover { opacity: 0.4 !important; }\r\n  .extension-button:active { transform: scale(0.99) !important; }\r\n .blocked-count-overlay {\r\n  position: absolute;\r\n  background-color: #8e8280;\r\n  color: white;\r\n  padding-right: 2px;\r\n  padding-left: 2px;\r\n  font-size: 12px;\r\n  border-radius: 8px;\r\n  font-weight: bold;\r\n  min-width: 26px;\r\n  max-width: 60px;\r\n  height: 15px;\r\n  top: 1px;\r\n  right: -8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  user-select: none;\r\n}\r\n#extension-button-search-bar{\r\n  position: relative;\r\n  user-select: none;\r\n}\r\n.logo-image{\r\n  width: 22px;\r\n  heigth: 22px;\r\n}\r\n`;\nexport function addTopOfPage(ExtensionIsOn, BlockedCount) {\n    blockedCount = BlockedCount;\n    let searchFormContainer = document.querySelector(\".fM33ce\");\n    let container = document.createElement(\"div\");\n    // if for whatever reason the searchFormContainer can not be found use the more secure appbar (this is under the search bar)\n    if (!searchFormContainer) {\n        searchFormContainer = document.querySelector(\"#appbar\");\n        container.style.marginBottom = \"5px\";\n        if (!searchFormContainer) {\n            return;\n        }\n    }\n    container.id = \"extension-button-search-bar\";\n    container.title = getTitle(); //TODO make the title look the same as google titles\n    container.className = \"XDyW0e\";\n    const img = document.createElement(\"img\");\n    img.src = chrome.runtime.getURL(\"logoApp.png\");\n    img.className = \"logo-image\";\n    const blockedOverlay = document.createElement(\"div\");\n    blockedOverlay.className = \"blocked-count-overlay\";\n    blockedOverlay.textContent = blockedCount.toString();\n    container = ExtensionIsOn\n        ? getExtensionOnElement(container)\n        : getExtensionOffElement(container);\n    container.appendChild(img);\n    container.appendChild(blockedOverlay);\n    // Insert the container after the form\n    const form = searchFormContainer.querySelector(\".dRYYxd\");\n    if (form) {\n        form.insertAdjacentElement(\"afterend\", container);\n    }\n    else {\n        searchFormContainer.appendChild(container);\n    }\n    addStylesToHead();\n}\nfunction addStylesToHead() {\n    const styleElement = document.createElement(\"style\");\n    styleElement.textContent = styles;\n    document.head.appendChild(styleElement);\n}\nfunction getExtensionOnElement(container) {\n    container.addEventListener(\"click\", () => {\n        resultsHidden = !resultsHidden;\n        container.title = getTitle();\n        toggleHiddenResults();\n    });\n    return container;\n}\nfunction getExtensionOffElement(container) {\n    container.title =\n        \"Search Sanitizer is currently turned off. Click to turn back on\";\n    container.style.opacity = \"0.4\";\n    container.addEventListener(\"click\", () => {\n        chrome.storage.sync.set({ ExtensionOnOff: true }, () => {\n            window.location.reload();\n        });\n    });\n    return container;\n}\nfunction getTitle() {\n    if (blockedCount < 1) {\n        return `${blockedCount} blocked search results`;\n    }\n    else {\n        return `${blockedCount} blocked search results. Click to ${!resultsHidden ? \"show\" : \"hide\"} them again`;\n    }\n}\nfunction toggleHiddenResults() {\n    const hiddenElements = document.querySelectorAll(\"[card-show]\");\n    hiddenElements.forEach((element) => {\n        if (element instanceof HTMLElement) {\n            element.setAttribute(\"card-show\", resultsHidden.toString());\n        }\n    });\n}\nexport function getResultsHidden() {\n    return resultsHidden;\n}\nexport function updateBlockedCount(newCount) {\n    blockedCount = newCount;\n    const container = document.querySelector(\".extension-button-search-bar\");\n    if (container) {\n        container.title = getTitle();\n    }\n    const overlayContainer = document.querySelector(\".blocked-count-overlay\");\n    if (overlayContainer) {\n        overlayContainer.textContent = blockedCount.toString();\n    }\n    chrome.runtime.sendMessage({ type: \"updateBadge\", count: blockedCount });\n}\n","export function createUrlFilter(initialBlockedUrls) {\n    let blockedUrls = Object.assign({}, initialBlockedUrls);\n    let urlsBlocked = false;\n    function shouldFilterLink(url) {\n        try {\n            for (const pattern of Object.keys(blockedUrls)) {\n                // Here we check if the pattern is an URL and if it matches the current checked URL\n                if (checkIfMatchedUrl(url, pattern)) {\n                    console.log(`Blocked URL: ${url} matched pattern: ${pattern}`);\n                    blockedUrls[pattern].s++;\n                    return true;\n                }\n                // Here we check if the pattern is a matched Pattern and if it matches the current checked URL\n                if (matchesPattern(url, pattern)) {\n                    console.log(`Blocked URL: ${url} matched pattern: ${pattern}`);\n                    blockedUrls[pattern].s++;\n                    return true;\n                }\n            }\n            return false;\n        }\n        catch (error) {\n            console.error(`Error processing ${url}:`, error);\n            return false;\n        }\n    }\n    function checkIfMatchedUrl(urlString, pattern) {\n        try {\n            const url = new URL(urlString);\n            pattern = removeTrailingSlash(pattern.toLowerCase());\n            const patternVariations = [\n                pattern,\n                `www.${pattern}`,\n                `https://${pattern}`,\n                `https://www.${pattern}`,\n                `http://${pattern}`,\n                `http://www.${pattern}`,\n            ];\n            const comparisons = [\n                url.origin.toLowerCase(),\n                url.host.toLowerCase(),\n                url.hostname.toLowerCase(),\n                removeTrailingSlash(url.href.toLowerCase()),\n            ];\n            for (const comp of comparisons) {\n                for (const variation of patternVariations) {\n                    if (comp === variation) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        catch (error) {\n            console.error(`Invalid URL: ${urlString}`);\n            return false;\n        }\n    }\n    function removeTrailingSlash(s) {\n        return s.endsWith(\"/\") ? s.slice(0, -1) : s;\n    }\n    function matchesPattern(url, pattern) {\n        url = url.toLowerCase();\n        pattern = pattern.toLowerCase();\n        const escapedPattern = pattern\n            .replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")\n            .replace(/\\\\\\*/g, \".*\");\n        const regex = new RegExp(`^${escapedPattern}$`);\n        return regex.test(url);\n    }\n    function shouldFilterResult(links, cites) {\n        for (const link of links) {\n            if (isElementVisible(link) && shouldFilterLink(link.href)) {\n                return true;\n            }\n        }\n        for (const cite of cites) {\n            if (cite.textContent &&\n                isElementVisible(cite) &&\n                shouldFilterLink(cite.textContent)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function isElementVisible(element) {\n        return !!(element.offsetWidth ||\n            element.offsetHeight ||\n            element.getClientRects().length);\n    }\n    function getBlockedUrls() {\n        return blockedUrls;\n    }\n    function resetUrlsBlocked() {\n        urlsBlocked = false;\n    }\n    function wereUrlsBlocked() {\n        return urlsBlocked;\n    }\n    function setBlockedUrl() {\n        chrome.storage.sync.set({ blockedUrlData: blockedUrls });\n    }\n    return {\n        setBlockedUrl,\n        shouldFilterResult,\n        getBlockedUrls,\n        resetUrlsBlocked,\n        wereUrlsBlocked,\n    };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addTopOfPage, getResultsHidden, updateBlockedCount, } from \"../components/topPage\";\nimport { createUrlFilter } from \"../helper/urlFilter\";\nfunction filterGoogleSearch(blockedUrls) {\n    if (document.documentElement.dataset.addScript) {\n        console.error(\"script already added\");\n        return;\n    }\n    document.documentElement.dataset.addScript = \"true\";\n    const processedResults = new Set();\n    const urlFilter = createUrlFilter(blockedUrls);\n    // Set up a MutationObserver to wait for the #search element\n    new MutationObserver((_, obs) => {\n        const search = document.querySelector(\"#search\");\n        if (search) {\n            obs.disconnect(); // Stop observing once #search is found\n            setupFilteringObserver(search);\n        }\n    }).observe(document.body, {\n        childList: true,\n        subtree: true,\n        attributes: false,\n        characterData: false,\n    });\n    function setupFilteringObserver(search) {\n        new MutationObserver(() => {\n            filterNormalSearch(search);\n            setTimeout(() => filterRelatedQuestions(search), 500); //TODO fix need for 500 timeout\n            urlFilter.setBlockedUrl();\n        }).observe(search, {\n            childList: true,\n            subtree: true,\n            attributes: false,\n            characterData: false,\n        });\n    }\n    function filterNormalSearch(search) {\n        const searchResults = search.querySelectorAll(\".g:not([data-processed]):not([data-initq] *)\");\n        if (!searchResults) {\n            return;\n        }\n        searchResults.forEach((result) => {\n            if (processedResults.has(result)) {\n                return;\n            }\n            processedResults.add(result);\n            result.setAttribute(\"data-processed\", \"true\");\n            const links = result.querySelectorAll(\"a\");\n            const cites = result.querySelectorAll(\"cite\");\n            if (urlFilter.shouldFilterResult(links, cites)) {\n                addCardShow(result);\n            }\n        });\n    }\n    function filterRelatedQuestions(search) {\n        const moreToAskSections = search.querySelectorAll(\"[data-initq]\");\n        if (!moreToAskSections) {\n            return;\n        }\n        moreToAskSections.forEach((askSection) => {\n            askSection.setAttribute(\"data-processed\", \"true\");\n            const relatedQuestions = askSection.querySelectorAll(\".related-question-pair:not([data-processed])\");\n            relatedQuestions.forEach((relatedQuestion) => {\n                if (processedResults.has(relatedQuestion)) {\n                    return;\n                }\n                processedResults.add(relatedQuestion);\n                relatedQuestion.setAttribute(\"data-processed\", \"true\");\n                const links = relatedQuestion.querySelectorAll(\"a\");\n                const cites = relatedQuestion.querySelectorAll(\"cite\");\n                if (urlFilter.shouldFilterResult(links, cites)) {\n                    addCardShow(relatedQuestion);\n                }\n            });\n        });\n    }\n}\nfunction initializeExtension() {\n    return __awaiter(this, void 0, void 0, function* () {\n        checkForUrlChange();\n        const isExtensionOn = yield chrome.storage.sync.get([\"ExtensionOnOff\"]);\n        if (isExtensionOn.ExtensionOnOff) {\n            const initialValues = yield chrome.storage.sync.get([\"blockedUrlData\"]);\n            if (initialValues.blockedUrlData) {\n                addDocumentHead();\n                filterGoogleSearch(initialValues.blockedUrlData);\n            }\n        }\n    });\n}\nlet BlockedCount = 0;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    chrome.storage.sync.get([\"ExtensionOnOff\"], (result) => {\n        addTopOfPage(result.ExtensionOnOff, BlockedCount);\n    });\n});\nfunction addDocumentHead() {\n    const style = document.createElement(\"style\");\n    style.id = \"Site Blocker Custom Styles\";\n    style.textContent = `\r\n    /* Display Styles */\r\n    [card-show=\"true\"] { display: block !important; }\r\n    [card-show=\"false\"] { display: none !important; }\r\n\r\n    /* Card Color Styles */\r\n    [card-relevant=\"true\"] {opacity: 0.7 !important}\r\n  `;\n    document.head.appendChild(style);\n}\nfunction addCardShow(element) {\n    BlockedCount = BlockedCount + 1;\n    updateBlockedCount(BlockedCount);\n    element.setAttribute(\"card-show\", getResultsHidden().toString());\n    element.setAttribute(\"card-relevant\", \"true\");\n}\nlet lastUrl = location.href;\nfunction checkForUrlChange() {\n    if (location.href !== lastUrl) {\n        lastUrl = location.href;\n        resetBadge();\n    }\n}\nfunction resetBadge() {\n    BlockedCount = 0;\n    updateBlockedCount(BlockedCount);\n}\nwindow.addEventListener(\"beforeunload\", resetBadge);\ninitializeExtension();\nfunction test() {\n    var _a, _b;\n    const urlParameters = new URL(window.location.href).searchParams;\n    const tbm = (_a = urlParameters.get(\"tbm\")) !== null && _a !== void 0 ? _a : \"\"; // Books\n    const udm = (_b = urlParameters.get(\"udm\")) !== null && _b !== void 0 ? _b : \"\"; // Images\n}\ntest();\n"],"names":[],"sourceRoot":""}