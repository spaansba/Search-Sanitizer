{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://react-extension/./src/background/background.ts"],"sourcesContent":["\"use strict\";\nchrome.runtime.onInstalled.addListener(() => {\n    // Define default values\n    const defaultValues = {\n        extensionOnOff: true,\n        darkMode: false,\n        lifetimeTotalBlocks: { i: 0, n: 0, v: 0, w: 0 },\n        blockedUrlData: {},\n        blockAds: true,\n        blockImage: true,\n        blockNews: true,\n        blockRecipe: true,\n        blockVideo: true,\n        blockWeb: true,\n    };\n    // Check and set local storage values\n    chrome.storage.local.get(Object.keys(defaultValues), (result) => {\n        const valuesToSet = {};\n        for (const [key, defaultValue] of Object.entries(defaultValues)) {\n            if (result[key] === undefined) {\n                valuesToSet[key] = defaultValue;\n            }\n        }\n        if (Object.keys(valuesToSet).length > 0) {\n            chrome.storage.local.set(valuesToSet, () => {\n                console.log(\"Initial values set in local storage\");\n            });\n        }\n    });\n    chrome.action.setBadgeBackgroundColor({ color: \"#666665\" });\n    chrome.action.setBadgeTextColor({ color: \"#fff\" });\n    // Add context menu\n    chrome.contextMenus.create({\n        id: \"AddCurrentURL\",\n        title: \"Block this site in Google Search\",\n        contexts: [\"all\"],\n    });\n});\nchrome.runtime.onMessage.addListener((message) => {\n    switch (message.type) {\n        case \"SLIDER_CHANGED\":\n            chrome.runtime.sendMessage(message);\n            break;\n        case \"updateBadge\":\n            chrome.action.setBadgeText({ text: message.count.toString() });\n            break;\n    }\n});\n// Reset the badge when a new page starts loading\nchrome.tabs.onUpdated.addListener((_tabId, changeInfo, _tab) => {\n    if (changeInfo.status === \"loading\") {\n        chrome.action.setBadgeText({ text: \"\" });\n    }\n});\nchrome.contextMenus.onClicked.addListener((info) => {\n    switch (info.menuItemId) {\n        case \"AddCurrentURL\":\n            chrome.action.openPopup();\n            break;\n    }\n});\n"],"names":[],"sourceRoot":""}